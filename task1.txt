from flask import Flask, request, jsonify
from flask_bcrypt import Bcrypt

app = Flask(__name__)
bcrypt = Bcrypt(app)

# Basit kullanıcı veritabanı (Gerçek projelerde veritabanı kullan)
users = {}

# Kullanıcı Kayıt (Sign Up)
@app.route("/signup", methods=["POST"])
def signup():
    data = request.get_json()
    email = data.get("email")
    password = data.get("password")

    if email in users:
        return jsonify({"error": "Bu e-posta zaten kayıtlı."}), 400

    hashed_password = bcrypt.generate_password_hash(password).decode("utf-8")
    users[email] = hashed_password
    return jsonify({"message": "Kayıt başarılı."})

# Kullanıcı Girişi (Sign In)
@app.route("/signin", methods=["POST"])
def signin():
    data = request.get_json()
    email = data.get("email")
    password = data.get("password")

    if email not in users or not bcrypt.check_password_hash(users[email], password):
        return jsonify({"error": "Geçersiz kimlik bilgileri."}), 401

    return jsonify({"message": "Giriş başarılı."})

# Şifremi Unuttum (Forget Password)
@app.route("/forgot-password", methods=["POST"])
def forgot_password():
    data = request.get_json()
    email = data.get("email")
    new_password = data.get("new_password")

    if email not in users:
        return jsonify({"error": "Bu e-posta sistemde kayıtlı değil."}), 404

    # Yeni şifreyi hashleyerek güncelliyoruz
    hashed_password = bcrypt.generate_password_hash(new_password).decode("utf-8")
    users[email] = hashed_password

    return jsonify({"message": "Şifreniz başarıyla sıfırlandı."})

if __name__ == "__main__":
    app.run(debug=True)